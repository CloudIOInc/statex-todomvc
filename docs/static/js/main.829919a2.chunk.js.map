{"version":3,"sources":["state.ts","ClearCompleted.tsx","TodoFooter.tsx","TodoItem.tsx","TodoList.tsx","TodoHeader.tsx","ToggleAll.tsx","UndoToolbar.tsx","App.tsx","index.tsx"],"names":["id","todoList","atom","path","defaultValue","text","isComplete","createTodoAction","action","set","oldTodoList","trim","toggleAllAction","event","updatedTodos","get","todos","find","todo","map","todoFilterAtom","todoFilteredIdAndIndex","selector","filter","all","list","item","index","indexOf","todoListStatsState","totalNum","totalCompletedNum","totalUncompletedNum","percentCompleted","length","shouldComponentUpdate","value","oldValue","memo","useStateXValue","setFilter","useStateXValueSetter","clearCompleted","useStateXCallback","activeTodos","className","onClick","useStateX","Math","round","href","cx","selected","useState","editing","setEditing","params","setText","setIsComplete","deleteItem","useStateXValueRemover","completed","autoFocus","onBlur","onChange","e","target","checked","type","onDoubleClick","filteredIdAndIndex","ids","oldIds","JSON","stringify","entry","key","inputValue","setInputValue","createTodo","useStateXAction","style","userSelect","placeholder","onKeyDown","keyCode","toggleAll","htmlFor","useStateXUndo","canRedo","canUndo","redo","undo","undefined","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAmBIA,EAAK,IAKT,IAAMC,EAAWC,eAAK,CACpBC,KAAM,CAAC,OAAQ,QACfC,aAd2B,CAC3B,CAAEJ,GAAI,IAAKK,KAAM,mBAAoBC,YAAY,GACjD,CAAEN,GAAI,IAAKK,KAAM,cAAeC,YAAY,GAC5C,CAAEN,GAAI,IAAKK,KAAM,wBACjB,CAAEL,GAAI,IAAKK,KAAM,qBAabE,EAAmBC,kBAAO,WAAUH,IACxCI,EADyD,EAAxBA,KAC7BR,GAAU,SAACS,GAAD,OACZ,CACEV,KAXKA,EAYLK,KAAMA,EAAKM,QAAU,gBAHX,mBAKTD,UAIDE,EAAkBJ,kBAAO,WAAeK,GAA8B,IAGtEC,EAH4BC,EAAyC,EAAzCA,IAAKN,EAAoC,EAApCA,IACjCO,EAAQD,EAAId,GAIda,EAHgBE,EAAMC,MAAK,SAACC,GAAD,OAAWA,EAAKZ,cAG5BU,EAAMG,KAAI,SAACD,GACxB,OAAOA,EAAKZ,WAAaY,EAAlB,eAA8BA,EAA9B,CAAoCZ,YAAY,OAG1CU,EAAMG,KAAI,SAACD,GACxB,OAAQA,EAAKZ,WAAN,eAA+BY,EAA/B,CAAqCZ,YAAY,IAA9BY,KAG9BT,EAAIR,EAAUa,MAGVM,EAAiBlB,eAAa,CAClCC,KAAM,CAAC,OAAQ,UACfC,aAAc,aAGViB,EAAyBC,mBAAS,CACtCnB,KAAM,CAAC,OAAQ,sBACfC,aAAc,GACdW,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACAQ,EAASR,EAAIK,GACbI,EAAMT,EAAId,GACZwB,EAAOD,EACX,OAAQD,GACN,IAAK,iBACHE,EAAOA,EAAKF,QAAO,SAACG,GAAD,OAAUA,EAAKpB,cAClC,MACF,IAAK,mBACHmB,EAAOA,EAAKF,QAAO,SAACG,GAAD,OAAWA,EAAKpB,cAGvC,OAAOmB,EAAKN,KAAI,SAACD,GAAD,MAAW,CAAElB,GAAIkB,EAAKlB,GAAI2B,MAAOH,EAAII,QAAQV,UAI3DW,EAAqBP,mBAAgB,CACzCnB,KAAM,CAAC,OAAQ,SACfC,aAAc,CACZ0B,SAAU,EACVC,kBAAmB,EACnBC,oBAAqB,EACrBC,iBAAkB,GAEpBlB,IAAK,YAAc,IACXU,GAAOV,EADG,EAAVA,KACWd,GACX6B,EAAWL,EAAKS,OAChBH,EAAoBN,EAAKF,QAAO,SAACG,GAAD,OAAUA,EAAKpB,cAAY4B,OAIjE,MAAO,CACLJ,WACAC,oBACAC,oBAN0BF,EAAWC,EAOrCE,iBANoC,IAAbH,EAAiB,EAAIC,EAAoBD,IASpEK,sBAAuB,SAACC,EAAOC,GAC7B,OACGA,GACDD,EAAMN,WAAaO,EAASP,UAC5BM,EAAML,oBAAsBM,EAASN,mBACrCK,EAAMJ,sBAAwBK,EAASL,qBACvCI,EAAMH,mBAAqBI,EAASJ,oBCpE3BK,sBAtBf,WAA2B,IACjBP,EAAsBQ,yBAAeV,GAArCE,kBACFS,EAAYC,+BAAqBrB,GAEjCsB,EAAiBC,6BAAkB,YAAmB,IAAhB5B,EAAe,EAAfA,IAAKN,EAAU,EAAVA,IAEzCmC,EADM7B,EAAId,GACUsB,QAAO,SAACL,GAAD,OAAWA,EAAKZ,cACjDG,EAAIR,EAAU2C,GACdJ,EAAU,cACT,IAEH,OAAKT,EAKH,4BAAQc,UAAU,kBAAkBC,QAASJ,GAA7C,mBAJO,QC6BIJ,sBA3Cf,WAAuB,IAAD,EAC8BC,yBAChDV,GADMI,EADY,EACZA,iBAAkBD,EADN,EACMA,oBADN,EAIQe,oBAAU3B,GAJlB,mBAIbG,EAJa,KAILiB,EAJK,KAMpB,OACE,4BAAQK,UAAU,UAChB,0BAAMA,UAAU,cACd,gCAASb,GADX,uBAEmBgB,KAAKC,MAAyB,IAAnBhB,GAF9B,eAIA,wBAAIY,UAAU,WACZ,4BACE,uBACEK,KAAK,KACLJ,QAAS,kBAAMN,EAAU,aACzBK,UAAWM,YAAG,CAAEC,SAAqB,aAAX7B,KAH5B,QAOF,4BACE,uBACE2B,KAAK,WACLJ,QAAS,kBAAMN,EAAU,qBACzBK,UAAWM,YAAG,CAAEC,SAAqB,qBAAX7B,KAH5B,WAOF,4BACE,uBACE2B,KAAK,cACLJ,QAAS,kBAAMN,EAAU,mBACzBK,UAAWM,YAAG,CAAEC,SAAqB,mBAAX7B,KAH5B,eAQJ,kBAAC,EAAD,UCISe,sBA5Cf,YAAiD,IAA7BX,EAA4B,EAA5BA,MAA4B,EAChB0B,oBAAS,GADO,mBACvCC,EADuC,KAC9BC,EAD8B,OAEtBR,oBAAU,CAAC,OAAQ,OAAQ,SAAU,QAAS,GAAI,CACxES,OAAQ,CAAE7B,WAHkC,mBAEvCtB,EAFuC,KAEjCoD,EAFiC,OAKVV,oBAClC,CAAC,OAAQ,OAAQ,SAAU,eAC3B,EACA,CAAES,OAAQ,CAAE7B,WARgC,mBAKvCrB,EALuC,KAK3BoD,EAL2B,KAUxCC,EAAaC,gCAAsB,CAAC,OAAQ,OAAQ,UAAW,CACnEJ,OAAQ,CAAE7B,WAGZ,OACE,wBACEkB,UAAWM,YAAG,CACZU,UAAWvD,EACXgD,QAASA,KAETA,EAYA,2BACEQ,WAAS,EACTjB,UAAU,OACVkB,OAAQ,kBAAMR,GAAW,IACzBS,SAAU,SAACC,GAAD,OAAOR,EAAQQ,EAAEC,OAAO9B,QAClCA,MAAO/B,IAhBT,yBAAKwC,UAAU,QACb,2BACEsB,QAAS7D,EACTuC,UAAU,SACVmB,SAAU,SAACC,GAAD,OAAOP,EAAcO,EAAEC,OAAOC,UACxCC,KAAK,aAEP,2BAAOC,cAAe,kBAAMd,GAAW,KAAQlD,GAC/C,4BAAQwC,UAAU,UAAUC,QAASa,SCZhCrB,sBAhBf,WACE,IAAMgC,EAAqB/B,yBAAelB,EAAwB,CAChEc,sBAAuB,SAACoC,EAAKC,GAC3B,OAAOC,KAAKC,UAAUH,KAASE,KAAKC,UAAUF,MAIlD,OACE,oCACGF,EAAmBnD,KAAI,SAACwD,GAAD,OACtB,kBAAC,EAAD,CAAUhD,MAAOgD,EAAMhD,MAAOiD,IAAKD,EAAM3E,YCiBlCsC,sBA5Bf,WAAuB,IAAD,EACgBe,mBAAS,IADzB,mBACbwB,EADa,KACDC,EADC,KAEdC,EAAaC,0BAAgBzE,GAWnC,OACE,4BAAQsC,UAAU,UAChB,wBAAIoC,MAAO,CAAEC,WAAY,SAAzB,SACA,2BACE9C,MAAOyC,EACPhC,UAAU,WACVsC,YAAY,yBACZC,UAhBN,SAA8BvE,GACN,KAAlBA,EAAMwE,UAIVN,EAAWF,GACXC,EAAc,MAWVhB,WAAW,EACXE,SAAU,SAACC,GAAD,OAAOa,EAAcb,EAAEC,OAAO9B,cCJjCE,sBAlBf,WAAsB,IACZL,EAAqBM,yBAAeV,GAApCI,iBACFqD,EAAYN,0BAAgBpE,GAElC,OACE,oCACE,2BACEZ,GAAG,aACH6C,UAAU,aACVuB,KAAK,WACLJ,SAAUsB,EACVnB,QAA8B,IAArBlC,IAEX,2BAAOsD,QAAQ,cAAf,4B,YCiBSjD,sBA/Bf,WAAwB,IAAD,EACoBkD,wBACvC,CAAC,OAAQ,QACT,KACA,GAHMC,EADa,EACbA,QAASC,EADI,EACJA,QAASC,EADL,EACKA,KAAMC,EADX,EACWA,KAMhC,OACE,4BAAQ/C,UAAU,UAChB,wBAAIA,UAAU,WACZ,4BACE,uBACEK,KAAK,SACLJ,QAAS4C,EAAUE,OAAOC,EAC1BZ,MAAO,CAAEa,MAAQJ,EAAmB,UAAT,SAH7B,SAOF,4BACE,uBACExC,KAAK,SACL+B,MAAO,CAAEa,MAAQL,EAAmB,UAAT,QAC3B3C,QAAS2C,EAAUE,OAAOE,GAH5B,cCIKvD,sBAhBf,WACE,OACE,yBAAKO,UAAU,WACb,kBAAC,EAAD,MACA,6BAASA,UAAU,QACjB,kBAAC,EAAD,MACA,wBAAIA,UAAU,aACZ,kBAAC,EAAD,QAGJ,kBAAC,EAAD,MACA,kBAAC,EAAD,UChBNkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,iBAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.829919a2.chunk.js","sourcesContent":["/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport { atom, selector, action } from '@cloudio/statex';\nimport { Todo, Filter, Stats } from './types';\n\nconst initialTodos: Todo[] = [\n  { id: 100, text: 'Learn Javascript', isComplete: true },\n  { id: 101, text: 'Learn React', isComplete: true },\n  { id: 102, text: \"Use CloudIO's StateX\" },\n  { id: 103, text: 'Launch Product' },\n];\n\nlet id = 103;\nfunction getId() {\n  return ++id;\n}\n\nconst todoList = atom({\n  path: ['todo', 'list'],\n  defaultValue: initialTodos,\n});\n\nconst createTodoAction = action(({ set }, text: string) => {\n  set(todoList, (oldTodoList) => [\n    {\n      id: getId(),\n      text: text.trim() || 'Empty Todo!',\n    },\n    ...oldTodoList,\n  ]);\n});\n\nconst toggleAllAction = action(({ get, set }, event: React.ChangeEvent) => {\n  let todos = get(todoList);\n  const hasActive = todos.find((todo) => !todo.isComplete);\n  let updatedTodos: Todo[];\n  if (hasActive) {\n    updatedTodos = todos.map((todo) => {\n      return todo.isComplete ? todo : { ...todo, isComplete: true };\n    });\n  } else {\n    updatedTodos = todos.map((todo) => {\n      return !todo.isComplete ? todo : { ...todo, isComplete: false };\n    });\n  }\n  set(todoList, updatedTodos);\n});\n\nconst todoFilterAtom = atom<Filter>({\n  path: ['todo', 'filter'],\n  defaultValue: 'Show All',\n});\n\nconst todoFilteredIdAndIndex = selector({\n  path: ['todo', 'filteredIdAndIndex'],\n  defaultValue: [],\n  get: ({ get }) => {\n    const filter = get(todoFilterAtom);\n    const all = get(todoList);\n    let list = all;\n    switch (filter) {\n      case 'Show Completed':\n        list = list.filter((item) => item.isComplete);\n        break;\n      case 'Show Uncompleted':\n        list = list.filter((item) => !item.isComplete);\n        break;\n    }\n    return list.map((todo) => ({ id: todo.id, index: all.indexOf(todo) }));\n  },\n});\n\nconst todoListStatsState = selector<Stats>({\n  path: ['todo', 'stats'],\n  defaultValue: {\n    totalNum: 0,\n    totalCompletedNum: 0,\n    totalUncompletedNum: 0,\n    percentCompleted: 0,\n  },\n  get: ({ get }) => {\n    const list = get(todoList);\n    const totalNum = list.length;\n    const totalCompletedNum = list.filter((item) => item.isComplete).length;\n    const totalUncompletedNum = totalNum - totalCompletedNum;\n    const percentCompleted = totalNum === 0 ? 0 : totalCompletedNum / totalNum;\n\n    return {\n      totalNum,\n      totalCompletedNum,\n      totalUncompletedNum,\n      percentCompleted,\n    };\n  },\n  shouldComponentUpdate: (value, oldValue) => {\n    return (\n      !oldValue ||\n      value.totalNum !== oldValue.totalNum ||\n      value.totalCompletedNum !== oldValue.totalCompletedNum ||\n      value.totalUncompletedNum !== oldValue.totalUncompletedNum ||\n      value.percentCompleted !== oldValue.percentCompleted\n    );\n  },\n});\n\nexport {\n  createTodoAction,\n  getId,\n  todoFilterAtom,\n  todoFilteredIdAndIndex,\n  todoList,\n  todoListStatsState,\n  toggleAllAction,\n};\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { memo } from 'react';\nimport {\n  useStateXValue,\n  useStateXCallback,\n  useStateXValueSetter,\n} from '@cloudio/statex';\nimport { todoListStatsState, todoList, todoFilterAtom } from './state';\n\nfunction ClearCompleted() {\n  const { totalCompletedNum } = useStateXValue(todoListStatsState);\n  const setFilter = useStateXValueSetter(todoFilterAtom);\n\n  const clearCompleted = useStateXCallback(({ get, set }) => {\n    let todos = get(todoList);\n    const activeTodos = todos.filter((todo) => !todo.isComplete);\n    set(todoList, activeTodos);\n    setFilter('Show All');\n  }, []);\n\n  if (!totalCompletedNum) {\n    return null;\n  }\n\n  return (\n    <button className=\"clear-completed\" onClick={clearCompleted}>\n      Clear completed\n    </button>\n  );\n}\n\nexport default memo(ClearCompleted);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { memo } from 'react';\nimport cx from 'clsx';\nimport { useStateXValue, useStateX } from '@cloudio/statex';\nimport { todoListStatsState, todoFilterAtom } from './state';\nimport ClearCompleted from './ClearCompleted';\n\nfunction TodoFooter() {\n  const { percentCompleted, totalUncompletedNum } = useStateXValue(\n    todoListStatsState,\n  );\n  const [filter, setFilter] = useStateX(todoFilterAtom);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{totalUncompletedNum}</strong>\n        {` item left - ${Math.round(percentCompleted * 100)}% complete`}\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            onClick={() => setFilter('Show All')}\n            className={cx({ selected: filter === 'Show All' })}>\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={() => setFilter('Show Uncompleted')}\n            className={cx({ selected: filter === 'Show Uncompleted' })}>\n            Active\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={() => setFilter('Show Completed')}\n            className={cx({ selected: filter === 'Show Completed' })}>\n            Completed\n          </a>\n        </li>\n      </ul>\n      <ClearCompleted />\n    </footer>\n  );\n}\n\nexport default memo(TodoFooter);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { useState, memo } from 'react';\nimport cx from 'clsx';\nimport { useStateX, useStateXValueRemover } from '@cloudio/statex';\n\nfunction TodoItem({ index }: { index: number }) {\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useStateX(['todo', 'list', ':index', 'text'], '', {\n    params: { index },\n  });\n  const [isComplete, setIsComplete] = useStateX(\n    ['todo', 'list', ':index', 'isComplete'],\n    false,\n    { params: { index } },\n  );\n  const deleteItem = useStateXValueRemover(['todo', 'list', ':index'], {\n    params: { index },\n  });\n\n  return (\n    <li\n      className={cx({\n        completed: isComplete,\n        editing: editing,\n      })}>\n      {!editing ? (\n        <div className=\"view\">\n          <input\n            checked={isComplete}\n            className=\"toggle\"\n            onChange={(e) => setIsComplete(e.target.checked)}\n            type=\"checkbox\"\n          />\n          <label onDoubleClick={() => setEditing(true)}>{text}</label>\n          <button className=\"destroy\" onClick={deleteItem} />\n        </div>\n      ) : (\n        <input\n          autoFocus\n          className=\"edit\"\n          onBlur={() => setEditing(false)}\n          onChange={(e) => setText(e.target.value)}\n          value={text}\n        />\n      )}\n    </li>\n  );\n}\n\nexport default memo(TodoItem);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { memo } from 'react';\nimport { useStateXValue } from '@cloudio/statex';\nimport { todoFilteredIdAndIndex } from './state';\nimport TodoItem from './TodoItem';\n\nfunction TodoList() {\n  const filteredIdAndIndex = useStateXValue(todoFilteredIdAndIndex, {\n    shouldComponentUpdate: (ids, oldIds) => {\n      return JSON.stringify(ids) !== JSON.stringify(oldIds);\n    },\n  });\n\n  return (\n    <>\n      {filteredIdAndIndex.map((entry) => (\n        <TodoItem index={entry.index} key={entry.id} />\n      ))}\n    </>\n  );\n}\n\nexport default memo(TodoList);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { memo, useState } from 'react';\nimport { useStateXAction } from '@cloudio/statex';\nimport { createTodoAction } from './state';\n\nfunction TodoHeader() {\n  const [inputValue, setInputValue] = useState('');\n  const createTodo = useStateXAction(createTodoAction);\n\n  function handleNewTodoKeyDown(event: React.KeyboardEvent) {\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    createTodo(inputValue);\n    setInputValue('');\n  }\n\n  return (\n    <header className=\"header\">\n      <h1 style={{ userSelect: 'none' }}>todos</h1>\n      <input\n        value={inputValue}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        onKeyDown={handleNewTodoKeyDown}\n        autoFocus={true}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n    </header>\n  );\n}\n\nexport default memo(TodoHeader);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { memo } from 'react';\nimport { todoListStatsState, toggleAllAction } from './state';\nimport { useStateXValue, useStateXAction } from '@cloudio/statex';\n\nfunction ToggleAll() {\n  const { percentCompleted } = useStateXValue(todoListStatsState);\n  const toggleAll = useStateXAction(toggleAllAction);\n\n  return (\n    <>\n      <input\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        type=\"checkbox\"\n        onChange={toggleAll}\n        checked={percentCompleted !== 1}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    </>\n  );\n}\n\nexport default memo(ToggleAll);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { memo } from 'react';\nimport { useStateXUndo } from '@cloudio/statex';\n\nfunction UndoToolbar() {\n  const { canRedo, canUndo, redo, undo } = useStateXUndo(\n    ['todo', 'list'],\n    '#',\n    true,\n  );\n\n  return (\n    <footer className=\"footer\">\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/undo\"\n            onClick={canUndo ? undo : undefined}\n            style={{ color: !canUndo ? '#ddd' : 'inherit' }}>\n            Undo\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"#/redo\"\n            style={{ color: !canRedo ? '#ddd' : 'inherit' }}\n            onClick={canRedo ? redo : undefined}>\n            Redo\n          </a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n\nexport default memo(UndoToolbar);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React, { memo } from 'react';\nimport TodoFooter from './TodoFooter';\nimport TodoList from './TodoList';\nimport TodoHeader from './TodoHeader';\nimport ToggleAll from './ToggleAll';\n\nimport 'todomvc-common/base.css';\nimport 'todomvc-app-css/index.css';\nimport UndoToolbar from './UndoToolbar';\n\nfunction App() {\n  return (\n    <div className=\"todoapp\">\n      <TodoHeader />\n      <section className=\"main\">\n        <ToggleAll />\n        <ul className=\"todo-list\">\n          <TodoList />\n        </ul>\n      </section>\n      <TodoFooter />\n      <UndoToolbar />\n    </div>\n  );\n}\n\nexport default memo(App);\n","/**\n * Copyright (c) CloudIO, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  https://cloudioinc.github.io/statex/\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { StateXProvider } from '@cloudio/statex';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateXProvider>\n      <App />\n    </StateXProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}